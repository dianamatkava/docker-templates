version: '3.8'

services: 
  web: 
    build: django  # path to Dockerfile
    entrypoint: ['/usr/src/django/entrypoint.sh'] # entrypoint containing steps before running django
    command: ['poetry', 'run', 'python', 'manage.py', 'runserver', '0.0.0.0:8000']  # Run server after entrypoint
#      - 'poetry run python manage.py migrate'
#      - 'poetry run python manage.py runserver'  # not possible to run set of commands
    volumes: 
      - ./django:/usr/src/django/  # bind mount specific path
    ports:
      - 8000:8000
    env_file:
      - .env.dev
    depends_on:
      - db

  db:  # host name && network service name ==> db_host: db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgres/data/  # Named volume: persistent storage, useful for sharing data between containers
    ports:
      - 5432:5432
    env_file:
      - .env.dev
#    environment:                    # we do not expose env this way normally
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=password
#      - POSTGRES_DB=postgres
      
  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data  # Named volume for persistent redis data
  
  celery:
    build: django  # celery is part of django
    entrypoint: [ '/usr/src/django/entrypoint.sh' ]
    command: [ 'celery', '-A', 'core', 'worker', '-l', 'info' ]
    volumes: # and the same src location
      - ./django:/urs/src/django/
    env_file:
      - .env.dev
    depends_on:
      - redis 
      - web
    
  celery-beat:
    build: django
    entrypoint: [ '/usr/src/django/entrypoint.sh' ]
    command: [ 'celery', '-A', 'core', 'beat', '-l', 'info' ]
    volumes:
      - ./django:/urs/src/django/
    env_file:
      - .env.dev
    depends_on:
      - redis 
      - web

volumes: 
  postgres_data:
  redis_data:
